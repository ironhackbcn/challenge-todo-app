{"ast":null,"code":"import _classCallCheck from \"/Users/mirkosiddi/Documents/Development/Bootcamp-2020/career-week-tech-challenge/challenge-todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mirkosiddi/Documents/Development/Bootcamp-2020/career-week-tech-challenge/challenge-todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from \"axios\";\n\nrequire(\"dotenv\").config(); // //Connection to DB parameters\n// const API_BASE_URL = process.env.API_BASE_URL.toString();\n// const API_PORT = process.env.API_PORT.toString();\n\n\nvar ApiService = /*#__PURE__*/function () {\n  function ApiService() {\n    _classCallCheck(this, ApiService);\n\n    this.api = axios.create({\n      baseURL: \"http://localhost:5000\",\n      withCredentials: true\n    });\n  }\n\n  _createClass(ApiService, [{\n    key: \"getAll\",\n    value: function getAll(user) {\n      var pr = this.api.get(\"/todo-list/\" + user).then(function (response) {\n        return response.data;\n      }).catch(function (err) {\n        console.log(err);\n      }); // .then(({ data }) => data); // Shorter way of `.then((response) => response.data);`\n\n      return pr;\n    }\n  }, {\n    key: \"createOne\",\n    value: function createOne(user, title, body) {\n      console.log(\"Creating one item\");\n      var pr = this.api.post(\"/todo-list/\", {\n        user,\n        title,\n        body\n      }).then(function (response) {\n        return response.data;\n      }).catch(function (err) {\n        console.log(err);\n      });\n      return pr;\n    }\n  }, {\n    key: \"deleteOne\",\n    value: function deleteOne(toDoId) {\n      var requestBody = {\n        toDoId\n      };\n      config.data = requestBody;\n      var pr = this.api.delete(\"/todo-list\", {\n        toDoId: toDoId\n      }).then(function (response) {\n        return response.data;\n      }).catch(function (err) {\n        console.log(err);\n      });\n      return pr;\n    }\n  }]);\n\n  return ApiService;\n}();\n\nvar apiService = new ApiService();\nexport default apiService; // Service is a set of methods abstracted and placed into a class, out of which we create one instance.\n// In the above case, all axios request calls are abstracted into methods.","map":{"version":3,"sources":["/Users/mirkosiddi/Documents/Development/Bootcamp-2020/career-week-tech-challenge/challenge-todo-app/src/lib/api-service.js"],"names":["axios","require","config","ApiService","api","create","baseURL","withCredentials","user","pr","get","then","response","data","catch","err","console","log","title","body","post","toDoId","requestBody","delete","apiService"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,CAEA;AACA;AACA;;;IAEMC,U;AACJ,wBAAc;AAAA;;AACZ,SAAKC,GAAL,GAAWJ,KAAK,CAACK,MAAN,CAAa;AACtBC,MAAAA,OAAO,EAAE,uBADa;AAEtBC,MAAAA,eAAe,EAAE;AAFK,KAAb,CAAX;AAID;;;;2BAEMC,I,EAAM;AACX,UAAMC,EAAE,GAAG,KAAKL,GAAL,CACRM,GADQ,CACJ,gBAAgBF,IADZ,EAERG,IAFQ,CAEH,UAACC,QAAD,EAAc;AAClB,eAAOA,QAAQ,CAACC,IAAhB;AACD,OAJQ,EAKRC,KALQ,CAKF,UAACC,GAAD,EAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAPQ,CAAX,CADW,CASX;;AAEA,aAAON,EAAP;AACD;;;8BAESD,I,EAAMU,K,EAAOC,I,EAAM;AAC3BH,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,UAAMR,EAAE,GAAG,KAAKL,GAAL,CACRgB,IADQ,CACH,aADG,EACY;AACnBZ,QAAAA,IADmB;AAEnBU,QAAAA,KAFmB;AAGnBC,QAAAA;AAHmB,OADZ,EAMRR,IANQ,CAMH,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAvB;AAAA,OANG,EAORC,KAPQ,CAOF,UAACC,GAAD,EAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OATQ,CAAX;AAUA,aAAON,EAAP;AACD;;;8BAESY,M,EAAQ;AAChB,UAAMC,WAAW,GAAG;AAClBD,QAAAA;AADkB,OAApB;AAIAnB,MAAAA,MAAM,CAACW,IAAP,GAAcS,WAAd;AACA,UAAMb,EAAE,GAAG,KAAKL,GAAL,CACRmB,MADQ,CACD,YADC,EACa;AAAEF,QAAAA,MAAM,EAAEA;AAAV,OADb,EAERV,IAFQ,CAEH,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAvB;AAAA,OAFG,EAGRC,KAHQ,CAGF,UAACC,GAAD,EAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OALQ,CAAX;AAMA,aAAON,EAAP;AACD;;;;;;AAGH,IAAMe,UAAU,GAAG,IAAIrB,UAAJ,EAAnB;AAEA,eAAeqB,UAAf,C,CAEA;AACA","sourcesContent":["import axios from \"axios\";\nrequire(\"dotenv\").config();\n\n// //Connection to DB parameters\n// const API_BASE_URL = process.env.API_BASE_URL.toString();\n// const API_PORT = process.env.API_PORT.toString();\n\nclass ApiService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: \"http://localhost:5000\",\n      withCredentials: true,\n    });\n  }\n\n  getAll(user) {\n    const pr = this.api\n      .get(\"/todo-list/\" + user)\n      .then((response) => {\n        return response.data;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // .then(({ data }) => data); // Shorter way of `.then((response) => response.data);`\n\n    return pr;\n  }\n\n  createOne(user, title, body) {\n    console.log(\"Creating one item\");\n    const pr = this.api\n      .post(\"/todo-list/\", {\n        user,\n        title,\n        body,\n      })\n      .then((response) => response.data)\n      .catch((err) => {\n        console.log(err);\n      });\n    return pr;\n  }\n\n  deleteOne(toDoId) {\n    const requestBody = {\n      toDoId,\n    };\n\n    config.data = requestBody;\n    const pr = this.api\n      .delete(\"/todo-list\", { toDoId: toDoId })\n      .then((response) => response.data)\n      .catch((err) => {\n        console.log(err);\n      });\n    return pr;\n  }\n}\n\nconst apiService = new ApiService();\n\nexport default apiService;\n\n// Service is a set of methods abstracted and placed into a class, out of which we create one instance.\n// In the above case, all axios request calls are abstracted into methods.\n"]},"metadata":{},"sourceType":"module"}